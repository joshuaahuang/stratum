on:
  push:
    branches: 
      - '*'
  pull_request:
    branches:
      - '*'
# Run fuzz tests on nightly Rust
name: Run utils buffer fuzz tests for 30 seconds
jobs:
  sv2_header_check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
      - name: Run utils buffer fuzz tests for 30 seconds no timeout
        run: |
          # chmod +x "./utils/buffer/fuzz-for-30-sec.sh"
          timeout 5 sh ./fuzz-for-30-sec.sh || code=$?; if [[ $code -ne 124 && $code -ne 0 ]]; then exit $code; fi
      - name: Run utils buffer fuzz tests for 30 seconds timeout
        run: | 
          # chmod +x "./utils/buffer/fuzz-for-30-sec.sh"
          timeout 1 sh ./fuzz-for-30-sec.sh || code =$?; if [[ $code -ne 124 && $code -ne 0 ]]; then exit $code; fi
    # steps:
          # - uses: actions/checkout@v2
          # - uses: actions/setup-python@v2
            # with:
              # python-version: '3.x'
          # - name: no timeout
            # run: timeout 10 python ./testing-fuzz/test.py || code=$?; if [[ $code -ne 124 && $code -ne 0 ]]; then exit $code; fi
          # - name: timeout # We add or so that return code is not none-zero which causes pipeline to fail
            # run: timeout 1 python ./testing-fuzz/test.py || code=$?; if [[ $code -ne 124 && $code -ne 0 ]]; then exit $code; fi          
